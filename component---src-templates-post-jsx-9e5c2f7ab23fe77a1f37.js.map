{"version":3,"sources":["webpack:///./src/components/PostFooter/PostFooter.jsx","webpack:///./src/components/AuthorInfo/AuthorInfo.jsx","webpack:///./src/components/PostShare/PostShare.jsx","webpack:///./src/components/GhostSubscribe/GhostSubscribe.jsx","webpack:///./src/components/ReadNext/ReadNext.jsx","webpack:///./src/components/Disqus/Disqus.jsx","webpack:///./src/templates/post.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/PostFormatting/PostFormatting.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/Drawer/Drawer.jsx","webpack:///./src/components/SiteWrapper/SiteWrapper.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/MenuButton/MenuButton.jsx","webpack:///./src/components/Navigation/GetNavList.jsx","webpack:///./src/components/SubscribeButton/SubscribeButton.jsx","webpack:///./src/components/Navigation/Navigation.jsx","webpack:///./src/components/MainContent/MainContent.jsx","webpack:///./src/components/SEO/SEO.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx"],"names":["PostFooter","render","children","this","props","react_default","a","createElement","className","React","Component","Bio","bio","morePostsUrl","gatsby_browser_entry","to","AuthorInfo","_this$props","prefix","_this$props$author","author","uid","name","image","url","location","authorInfoUrl","AuthorLink","AuthorInfo_Bio","AuthorMeta","AuthorLocation","AuthorWebsite","PostShare","siteUrl","pathPrefix","postNode","postPath","config","post","frontmatter","FacebookShareButton","ShareButtons","GooglePlusShareButton","TwitterShareButton","style","display","title","quote","GhostSubscribe","subscribers","blog","href","ReadNextStory","path","cover","excerpt","styles","backgroundImage","classes","classNames","no-cover","ReadNext","next","prev","ReadNext_ReadNextStory","Disqus","_this","_Component","call","state","toasts","notifyAboutComment","bind","assertThisInitialized_default","onSnackbarDismiss","setState","slice","newToasts","concat","push","text","disqusShortname","fields","slug","main_default","shortname","identifier","category_id","onNewComment","formatReadNext","value","PostTemplate","menuOpen","handleOnClick","evt","stopPropagation","closeMenu","openMenu","handleOnClose","data","_this$props$pageConte","pageContext","markdownRemark","result","id","postDefaultCategoryID","parsePost","date","tags","post_class","authorData","AuthorModel","getAuthor","authors","edges","blogAuthorId","layout","Drawer","isOpen","Helmet_default","siteTitle","SEO","postSEO","Navigation","onClose","SiteWrapper","MainHeader","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","MainContent","PostFormatting","PostHeader","PostDate","PostTags","dangerouslySetInnerHTML","__html","html","components_PostFooter_PostFooter","AuthorImage","components_AuthorInfo_AuthorInfo","components_PostShare_PostShare","pathname","components_GhostSubscribe_GhostSubscribe","components_Disqus_Disqus","components_ReadNext_ReadNext","Footer","copyright","promoteGatsby","pageQuery","module","exports","blogPostDir","blogAuthorDir","siteTitleAlt","siteDescription","siteCover","siteRss","siteRssAuthor","sitePaginationLimit","googleAnalyticsID","siteSocialUrls","userLinks","label","themeColor","backgroundColor","react__WEBPACK_IMPORTED_MODULE_1___default","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","_","kebabCase","length","react__WEBPACK_IMPORTED_MODULE_2___default","dateTime","moment","Date","format","findName","authorEdgesToList","authorEdges","edge","node","hasAuthor","authorUid","authorList","Boolean","find","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","currentPath","replace","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content","_this$props$copyright","year","getFullYear","show","gatsby__WEBPACK_IMPORTED_MODULE_2__","src","alt","GetNavList","NavList","primaryText","component","Link","divider","forEach","link","SubscribeButton","Divider","Subheader","ListItem","remainingProps","objectWithoutPropertiesLoose_default","role","mapToListParts","item","isValidElement","subheader","nestedItems","Object","assign","navItems","components_SubscribeButton_SubscribeButton","postTitle","postDescription","postImage","postURL","postMeta","description","realPrefix","blogURL","schemaOrgJSONLD","@context","@type","alternateName","itemListElement","position","@id","headline","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-templates-post-jsx-9e5c2f7ab23fe77a1f37.js","sourcesContent":["import React from \"react\";\nimport \"./PostFooter.css\";\n\nclass PostFooter extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <footer className=\"post-footer\">{children}</footer>;\n  }\n}\n\nexport default PostFooter;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorInfo.css\";\nimport AuthorMeta from \"../AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../AuthorWebsite/AuthorWebsite\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\n\nconst Bio = props => {\n  const { bio, morePostsUrl } = props;\n  if (bio) {\n    return <p>{bio}</p>;\n  }\n  return (\n    <p>\n      Read\n      <Link to={morePostsUrl}>more posts</Link>\n      by this author.\n    </p>\n  );\n};\n\nclass AuthorInfo extends React.Component {\n  render() {\n    const {\n      prefix,\n      author: { uid, name, image, bio, url, location }\n    } = this.props;\n    const authorInfoUrl = prefix ? `${prefix}/${uid}` : uid;\n    if (image) {\n      return (\n        <section className=\"author\">\n          <h4>\n            <AuthorLink url={authorInfoUrl} name={name} />\n          </h4>\n          <Bio bio={bio} morePostsUrl={authorInfoUrl} />\n          <AuthorMeta>\n            <AuthorLocation location={location} />\n            <AuthorWebsite url={url} />\n          </AuthorMeta>\n        </section>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorInfo;\n","import React from \"react\";\nimport { ShareButtons } from \"react-share\";\nimport \"./PostShare.css\";\n\nconst formatSiteUrl = (siteUrl, pathPrefix, path) =>\n  siteUrl + (pathPrefix === \"/\" ? \"\" : pathPrefix) + path;\n\n// const getCover = post => {\n//   const { cover } = post;\n//   if (cover && cover.childImageSharp && cover.childImageSharp.original) {\n//     return cover.childImageSharp.original.src;\n//   }\n//   return \"\";\n// };\n\nclass PostShare extends React.Component {\n  render() {\n    const { postNode, postPath, config } = this.props;\n    const post = postNode.frontmatter;\n    const url = formatSiteUrl(config.siteUrl, config.pathPrefix, postPath);\n\n    const {\n      FacebookShareButton,\n      GooglePlusShareButton,\n      // PinterestShareButton,\n      TwitterShareButton\n    } = ShareButtons;\n\n    return (\n      <section className=\"share\">\n        <h4>Share this post</h4>\n        <div style={{ display: \"flex\" }}>\n          <TwitterShareButton url={url} title={post.title}>\n            {/* <a className=\"icon-twitter\" style={{ fontSize: \"1.4em\" }} href=\"https://twitter.com/\"> */}\n            <span className=\"hidden\">Twitter</span>\n            {/* </a> */}\n          </TwitterShareButton>\n          <FacebookShareButton url={url} quote={post.title}>\n            {/* <a className=\"icon-facebook\" style={{ fontSize: \"1.4em\" }} href=\"https://facebook.com/\"> */}\n            <span className=\"hidden\">Facebook</span>\n            {/* </a> */}\n          </FacebookShareButton>\n          {/* <PinterestShareButton */}\n          {/* url={url} */}\n          {/* media={formatSiteUrl( */}\n          {/* config.siteUrl, */}\n          {/* config.pathPrefix, */}\n          {/* getCover(post) */}\n          {/* )} */}\n          {/* description={postNode.excerpt} */}\n          {/* > */}\n          {/* <a className=\"icon-pinterest\" style={{ fontSize: \"1.4em\" }}> */}\n          {/* <span className=\"hidden\">Pinterest</span> */}\n          {/* </a> */}\n          {/* </PinterestShareButton> */}\n          <GooglePlusShareButton url={url}>\n            {/* <a className=\"icon-google-plus\" style={{ fontSize: \"1.4em\" }} href=\"https://google.com/\"> */}\n            <span className=\"hidden\">Google+</span>\n            {/* </a> */}\n          </GooglePlusShareButton>\n        </div>\n      </section>\n    );\n  }\n}\n\nexport default PostShare;\n","import React from \"react\";\nimport \"./GhostSubscribe.css\";\n\nclass GhostSubscribe extends React.Component {\n  render() {\n    const { subscribers, blog } = this.props;\n    // const subscribeFormPlaceholder = \"Your email address\";\n    if (subscribers && blog) {\n      // Email subscribe form at the bottom of the page\n      return (\n        <section className=\"gh-subscribe\">\n          <h3 className=\"gh-subscribe-title\">\n            Subscribe to\n            {blog.title}\n          </h3>\n          <p>Get the latest posts delivered right to your inbox.</p>\n          <span className=\"gh-subscribe-rss\">\n            {\"or subscribe \"}\n            <a href=\"http://cloud.feedly.com/#subscription/feed/{blog.url}/rss/\">\n              via RSS\n            </a>\n            {\" with Feedly!\"}\n          </span>\n        </section>\n      );\n    }\n    return null;\n  }\n}\n\nexport default GhostSubscribe;\n","import React, { Component } from \"react\";\nimport classNames from \"classnames\";\nimport { Link } from \"gatsby\";\nimport \"./ReadNext.css\";\n\nconst ReadNextStory = props => {\n  const { post } = props;\n  if (post) {\n    /** Limit words to 19 in GraphQL * */\n    const { path, cover, title, excerpt } = post;\n    const styles = cover ? { backgroundImage: `url(${cover}` } : null;\n    const classes = classNames(\"read-next-story\", props.className, {\n      \"no-cover\": !cover\n    });\n    return (\n      <Link className={classes} style={styles} to={path}>\n        <section className=\"post\">\n          <h2>{title}</h2>\n          <p>{`${excerpt}&hellip;`}</p>\n        </section>\n      </Link>\n    );\n  }\n  return null;\n};\n\n/**\n * Links to Previous/Next posts\n */\nclass ReadNext extends Component {\n  render() {\n    const { next, prev } = this.props;\n    return (\n      <aside className=\"read-next\">\n        <ReadNextStory post={next} />\n        <ReadNextStory className=\"prev\" post={prev} />\n      </aside>\n    );\n  }\n}\n\nexport default ReadNext;\n","import React, { Component } from \"react\";\nimport ReactDisqusComments from \"react-disqus-comments\";\nimport config from \"../../../data/SiteConfig\";\n\nclass Disqus extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      toasts: []\n    };\n    this.notifyAboutComment = this.notifyAboutComment.bind(this);\n    this.onSnackbarDismiss = this.onSnackbarDismiss.bind(this);\n  }\n\n  onSnackbarDismiss() {\n    const { toasts } = this.state;\n    this.setState({ toasts: toasts.slice(1) });\n  }\n\n  notifyAboutComment() {\n    const { toasts } = this.state;\n    const newToasts = toasts.concat();\n    newToasts.push({ text: \"New comment available!\" });\n    this.setState({ toasts: newToasts });\n  }\n\n  render() {\n    const { postNode } = this.props;\n    if (!config.disqusShortname) {\n      return null;\n    }\n    const post = postNode.frontmatter;\n    const url = config.siteUrl + config.pathPrefix + postNode.fields.slug;\n    return (\n      <ReactDisqusComments\n        shortname={config.disqusShortname}\n        identifier={post.title}\n        title={post.title}\n        url={url}\n        category_id={post.category_id}\n        onNewComment={this.notifyAboutComment}\n      />\n    );\n  }\n}\n\nexport default Disqus;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport SEO from \"../components/SEO/SEO\";\nimport config from \"../../data/SiteConfig\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainContent from \"../components/MainContent/MainContent\";\nimport PostHeader from \"../components/PostHeader/PostHeader\";\nimport PostFormatting from \"../components/PostFormatting/PostFormatting\";\nimport PostDate from \"../components/PostDate/PostDate\";\nimport PostFooter from \"../components/PostFooter/PostFooter\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorInfo from \"../components/AuthorInfo/AuthorInfo\";\nimport PostShare from \"../components/PostShare/PostShare\";\nimport GhostSubscribe from \"../components/GhostSubscribe/GhostSubscribe\";\nimport ReadNext from \"../components/ReadNext/ReadNext\";\nimport PostTags from \"../components/PostTags/PostTags\";\nimport Footer from \"../components/Footer/Footer\";\nimport AuthorModel from \"../models/author-model\";\nimport Disqus from \"../components/Disqus/Disqus\";\nimport Layout from \"../components/layout\";\n\nfunction parsePost(post, slug) {\n  const result = post;\n  if (!result.id) {\n    result.id = slug;\n  }\n  if (!result.id) {\n    result.category_id = config.postDefaultCategoryID;\n  }\n  return result;\n}\n\nconst formatReadNext = value => ({\n  path: value.fields.slug,\n  title: value.frontmatter.title,\n  cover: value.frontmatter.cover,\n  excerpt: value.excerpt\n});\n\nclass PostTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    const { menuOpen } = this.state;\n    evt.stopPropagation();\n    if (menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      location,\n      data,\n      pageContext: { slug, next, prev }\n    } = this.props;\n    const { menuOpen } = this.state;\n\n    const postNode = data.markdownRemark;\n    const post = parsePost(postNode.frontmatter, slug);\n    const { cover, title, date, author, tags } = post;\n    const className = post.post_class ? post.post_class : \"post\";\n    const authorData = AuthorModel.getAuthor(\n      data.authors.edges,\n      author,\n      config.blogAuthorId\n    );\n    const getNextData = () => (next ? formatReadNext(data.next) : null);\n    const getPrevData = () => (prev ? formatReadNext(data.prev) : null);\n\n    return (\n      <Layout location={location}>\n        <Drawer className=\"post-template\" isOpen={menuOpen}>\n          <Helmet>\n            <title>{`${post.title} | ${config.siteTitle}`}</title>\n          </Helmet>\n          <SEO postPath={slug} postNode={postNode} postSEO />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"post-head\" cover={cover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n            <MainContent>\n              <PostFormatting className={className}>\n                <PostHeader>\n                  <h1 className=\"post-title\">{title}</h1>\n                  <section className=\"post-meta\">\n                    <PostDate date={date} />\n                    <PostTags prefix=\" on \" tags={tags} />\n                  </section>\n                </PostHeader>\n\n                <section\n                  className=\"post-content\"\n                  dangerouslySetInnerHTML={{ __html: postNode.html }}\n                />\n\n                <PostFooter>\n                  <AuthorImage author={authorData} />\n                  <AuthorInfo prefix=\"/author\" author={authorData} />\n                  <PostShare\n                    postNode={postNode}\n                    postPath={location.pathname}\n                    config={config}\n                  />\n                  <GhostSubscribe />\n                  <Disqus postNode={postNode} />\n                </PostFooter>\n              </PostFormatting>\n            </MainContent>\n            <ReadNext next={getNextData()} prev={getPrevData()} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!, $next: String, $prev: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n        cover\n        date\n        category\n        tags\n        author\n      }\n      fields {\n        slug\n      }\n    }\n    # prev post data\n    prev: markdownRemark(fields: { slug: { eq: $prev } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # next post data\n    next: markdownRemark(fields: { slug: { eq: $next } }) {\n      excerpt(pruneLength: 112)\n      frontmatter {\n        title\n        cover\n        date\n      }\n      fields {\n        slug\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default PostTemplate;\n","module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"jake\", // The default and fallback author ID used for blog posts without a defined author.\n  siteTitle: \"What I Learned Today\", // Site title.\n  siteTitleAlt: \"A Daily Engineering Blog\", // Alternative site title for SEO.\n  siteLogo:\n    \"https://haysclark.github.io/gatsby-starter-casper/logos/logo-1024.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://aceluby.github.io/\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/blog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"A technology blog for software engineers\", // Website description used for RSS feeds/meta description tag.\n  siteCover:\n    \"https://haysclark.github.io/gatsby-starter-casper/images/blog-cover.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n  siteNavigation: true, // If navigation is enabled the Menu button will be visible\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"What I Learned Today\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 10, // The max number of posts per page.\n  googleAnalyticsID: \"UA-111982167-1\", // GA tracking ID.\n  // disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n    \"https://aceluby.github.io/resume/\",\n    \"https://stackoverflow.com/users/11500664/jake-luby\",\n    \"https://twitter.com/aceluby\",\n    \"mailto:jake.luby@gmail.com\"\n  ],\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"Tag - Misc\",\n      url: \"/blog/tags/misc\",\n    },\n    {\n      label: \"Tag - Gatsby\",\n      url: \"/blog/tags/gatsby\",\n    },\n    {\n      label: \"Tag - ReactJs\",\n      url: \"/blog/tags/reactjs\",\n    },\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"What I Learned Today\" // Label used before the year\n    // year: \"2018\" // optional, set specific copyright year or range of years, defaults to current year\n    // url: \"https://www.gatsbyjs.org/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: true // Enables the GatsbyJS promotion information in footer.\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { prefix, tags } = this.props;\n    if (tags) {\n      return (\n        <span>\n          {prefix}\n          {tags.map((tag, index, arr) => (\n            <span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>\n          ))}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorLink.css\";\n\nclass AuthorLink extends React.Component {\n  render() {\n    const { name, url } = this.props;\n    if (name && url) {\n      return <Link to={url}>{name}</Link>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLink;\n","import React from \"react\";\nimport \"./PostFormatting.css\";\n\nclass PostFormatting extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    return <article className={className}>{children}</article>;\n  }\n}\n\nexport default PostFormatting;\n","import React from \"react\";\nimport \"./PostHeader.css\";\n\nclass PostHeader extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <header className=\"post-header\">{children}</header>;\n  }\n}\n\nexport default PostHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostDate.css\";\n\nclass PostDate extends React.Component {\n  render() {\n    const { date } = this.props;\n    return (\n      <time\n        className=\"post-date\"\n        dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}\n      >\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>\n    );\n  }\n}\n\nexport default PostDate;\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"prismjs/themes/prism.css\";\nimport config from \"../../data/SiteConfig\";\nimport \"./layout.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const {\n      location: { pathname }\n    } = this.props;\n    const currentPath = pathname.replace(pathPrefix, \"\").replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.includes(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.includes(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Drawer.css\";\n\nclass Drawer extends React.Component {\n  render() {\n    const { children, isOpen, className } = this.props;\n\n    const getClassName = isOpened => (isOpened ? \"nav-opened\" : \"nav-closed\");\n    const classes = classNames(className, getClassName(isOpen));\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default Drawer;\n","import React from \"react\";\nimport \"./SiteWrapper.css\";\n\nclass SiteWrapper extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <div className=\"site-wrapper\">{children}</div>;\n  }\n}\n\nexport default SiteWrapper;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    const PoweredBy = props => {\n      const { show } = props;\n      if (show) {\n        return (\n          <section className=\"poweredby\">\n            {\"Proudly published with \"}\n            <a href=\"https://gatsbyjs.org\">Gatsby</a>\n          </section>\n        );\n      }\n      return null;\n    };\n\n    const {\n      promoteGatsby,\n      copyright: { label, url, year }\n    } = this.props;\n    const date = year || new Date().getFullYear();\n    return (\n      <footer className=\"site-footer clearfix\">\n        <section className=\"copyright\">\n          <a href={url || \"/\"}>{`${label}`}</a>\n          {` `}\n          &copy;\n          {`${date}`}\n        </section>\n        <PoweredBy show={promoteGatsby} />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainHeader.css\";\n\nclass MainHeader extends React.Component {\n  render() {\n    const { children, cover, className } = this.props;\n    const classes = classNames(\"main-header\", className, {\n      \"no-cover\": !cover\n    });\n    const getStyle = () => {\n      if (cover) {\n        return { backgroundImage: `url(\"${cover}\")` };\n      }\n      return null;\n    };\n\n    return (\n      <header className={classes} style={getStyle()}>\n        {children}\n      </header>\n    );\n  }\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainNav.css\";\n\nclass MainNav extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const formatting = [\"overlay\", \"clearfix\"];\n    const classes = classNames(\"main-nav\", formatting, className);\n\n    return <nav className={classes}>{children}</nav>;\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import React, { Component } from \"react\";\nimport \"./MenuButton.css\";\n\nclass MenuButton extends Component {\n  render() {\n    const { navigation, onClick } = this.props;\n    if (navigation && onClick) {\n      return (\n        <a className=\"menu-button icon-menu\" href=\"#menu\" onClick={onClick}>\n          <span className=\"word\">Menu</span>\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default MenuButton;\n","// import FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      // LeftIcon: <p>home</p>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        // LeftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    // LeftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/author/jake\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React from \"react\";\nimport \"./SubscribeButton.css\";\n\nclass SubscribeButton extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <a className=\"subscribe-button icon-feed\" href={url}>\n          Subscribe\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default SubscribeButton;\n","import React, { Component, createElement, isValidElement } from \"react\";\nimport GetNavList from \"./GetNavList\";\nimport \"./Navigation.css\";\nimport SubscribeButton from \"../SubscribeButton/SubscribeButton\";\n\nconst Divider = () => null;\n\nconst Subheader = props => {\n  const { primaryText } = props;\n  return <h3>{primaryText}</h3>;\n};\n\nconst ListItem = props => {\n  const { primaryText, component, ...remainingProps } = props;\n  return (\n    <li className=\"nav-opened\" role=\"presentation\">\n      {createElement(component, remainingProps, primaryText)}\n    </li>\n  );\n};\n\nconst mapToListParts = (item, index) => {\n  if (typeof item === \"string\" || typeof item === \"number\") {\n    return createElement(ListItem, { key: item, primaryText: item });\n  }\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\n  let component;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  const props = { ...remainingProps, key: item.key || index };\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n};\n\nclass Navigation extends Component {\n  render() {\n    const { config, onClose } = this.props;\n    const navItems = GetNavList(config);\n    return (\n      <div>\n        <div className=\"nav\">\n          <h3 className=\"nav-title\">Menu</h3>\n          <a href=\"#close\" className=\"nav-close\" onClick={onClose}>\n            <span className=\"hidden\">Close</span>\n          </a>\n          <ul>{navItems.map(mapToListParts)}</ul>\n          <SubscribeButton url={config.siteRss} />\n        </div>\n        <span className=\"nav-cover\" />\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainContent.css\";\n\nclass MainContent extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"content\", className);\n\n    return (\n      <main id=\"content\" className={classes} role=\"main\">\n        {children}\n      </main>\n    );\n  }\n}\n\nexport default MainContent;\n","import React, { Component } from \"react\";\nimport Helmet from \"react-helmet\";\nimport config from \"../../../data/SiteConfig\";\n\nclass SEO extends Component {\n  render() {\n    const { postNode, postPath, postSEO } = this.props;\n\n    let postTitle;\n    let postDescription;\n    let postImage;\n    let postURL;\n\n    if (postSEO) {\n      const postMeta = postNode.frontmatter;\n      postTitle = postMeta.title;\n      postDescription = postMeta.description\n        ? postMeta.description\n        : postNode.excerpt;\n      postImage = postMeta.cover;\n      postURL = config.siteUrl + config.pathPrefix + postPath;\n    } else {\n      postTitle = config.siteTitle;\n      postDescription = config.siteDescription;\n      postImage = config.siteLogo;\n    }\n\n    const realPrefix = config.pathPrefix === \"/\" ? \"\" : config.pathPrefix;\n    postImage = config.siteUrl + realPrefix + postImage;\n    const blogURL = config.siteUrl + config.pathPrefix;\n    const schemaOrgJSONLD = [\n      {\n        \"@context\": \"http://schema.org\",\n        \"@type\": \"WebSite\",\n        url: blogURL,\n        name: postTitle,\n        alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\"\n      }\n    ];\n    if (postSEO) {\n      schemaOrgJSONLD.push([\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BreadcrumbList\",\n          itemListElement: [\n            {\n              \"@type\": \"ListItem\",\n              position: 1,\n              item: {\n                \"@id\": postURL,\n                name: postTitle,\n                image: postImage\n              }\n            }\n          ]\n        },\n        {\n          \"@context\": \"http://schema.org\",\n          \"@type\": \"BlogPosting\",\n          url: blogURL,\n          name: postTitle,\n          alternateName: config.siteTitleAlt ? config.siteTitleAlt : \"\",\n          headline: postTitle,\n          image: {\n            \"@type\": \"ImageObject\",\n            url: postImage\n          },\n          description: postDescription\n        }\n      ]);\n    }\n    return (\n      <Helmet>\n        {/* General tags */}\n        <meta name=\"description\" content={postDescription} />\n        <meta name=\"image\" content={postImage} />\n\n        {/* Schema.org tags */}\n        <script type=\"application/ld+json\">\n          {JSON.stringify(schemaOrgJSONLD)}\n        </script>\n\n        {/* OpenGraph tags */}\n        <meta property=\"og:url\" content={postSEO ? postURL : blogURL} />\n        {postSEO ? <meta property=\"og:type\" content=\"article\" /> : null}\n        <meta property=\"og:title\" content={postTitle} />\n        <meta property=\"og:description\" content={postDescription} />\n        <meta property=\"og:image\" content={postImage} />\n        <meta\n          property=\"fb:app_id\"\n          content={config.siteFBAppID ? config.siteFBAppID : \"\"}\n        />\n\n        {/* Twitter Card tags */}\n        <meta name=\"twitter:card\" content=\"summary_large_image\" />\n        <meta\n          name=\"twitter:creator\"\n          content={config.userTwitter ? config.userTwitter : \"\"}\n        />\n        <meta name=\"twitter:title\" content={postTitle} />\n        <meta name=\"twitter:description\" content={postDescription} />\n        <meta name=\"twitter:image\" content={postImage} />\n      </Helmet>\n    );\n  }\n}\n\nexport default SEO;\n","import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const {\n      author: { name, image, url }\n    } = this.props;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n"],"sourceRoot":""}