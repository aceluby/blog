{"version":3,"sources":["webpack:///./src/templates/category.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/PostFormatting/PostFormatting.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx"],"names":["CategoryTemplate","render","_this$props","this","props","location","category","pageContext","_this$props$data","data","allMarkdownRemark","authors","postEdges","edges","authorsEdges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_5__","className","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","title","config","siteTitle","_components_PostListing_PostListing__WEBPACK_IMPORTED_MODULE_3__","postAuthors","React","Component","pageQuery","module","exports","blogPostDir","blogAuthorDir","blogAuthorId","siteTitleAlt","siteLogo","siteUrl","pathPrefix","siteDescription","siteCover","cover","siteNavigation","siteRss","siteRssAuthor","sitePaginationLimit","googleAnalyticsID","disqusShortname","siteSocialUrls","postDefaultCategoryID","userLinks","label","url","copyright","themeColor","backgroundColor","promoteGatsby","PostTags","prefix","tags","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","length","AuthorLink","name","react__WEBPACK_IMPORTED_MODULE_2___default","PostFormatting","children","PostHeader","PostDate","date","dateTime","moment","Date","format","findName","author","uid","authorEdgesToList","authorEdges","edge","node","AuthorModel","hasAuthor","authorUid","authorList","Boolean","find","getAuthor","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","currentPath","pathname","replace","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content","AuthorThumbnail","avatar","react_default","src","alt","data-pin-nopin","PostListing","postList","postEdge","path","fields","slug","frontmatter","SiteConfig","excerpt","timeToRead","getPostList","post","post_class","gatsby_browser_entry","components_AuthorThumbnail_AuthorThumbnail","image"],"mappings":"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","file":"component---src-templates-category-jsx-83f1c51d04bf8e410b40.js","sourcesContent":["import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Layout from \"../components/layout\";\n\nclass CategoryTemplate extends React.Component {\n  render() {\n    const {\n      location,\n      pageContext: { category },\n      data: { allMarkdownRemark, authors }\n    } = this.props;\n\n    const postEdges = allMarkdownRemark.edges;\n    const authorsEdges = authors.edges;\n    return (\n      <Layout location={location}>\n        <div className=\"category-container\">\n          <Helmet\n            title={`Posts in category \"${category}\" | ${config.siteTitle}`}\n          />\n          <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n        </div>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query CategoryPage($category: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { category: { eq: $category } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n          }\n        }\n      }\n    }\n    # authors\n    authors: allAuthorsJson {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n        }\n      }\n    }\n  }\n`;\n\nexport default CategoryTemplate;\n","module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"jake\", // The default and fallback author ID used for blog posts without a defined author.\n  siteTitle: \"What I Learned Today\", // Site title.\n  siteTitleAlt: \"A Daily Engineering Blog\", // Alternative site title for SEO.\n  siteLogo:\n    \"/blog/logos/logo-1024.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://aceluby.github.io/\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/blog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"A technology blog for software engineers\", // Website description used for RSS feeds/meta description tag.\n  siteCover:\n    \"/blog/images/blog-cover.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n  cover:\n      \"/blog/images/blog-cover.jpg\",\n  siteNavigation: true, // If navigation is enabled the Menu button will be visible\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"What I Learned Today\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 10, // The max number of posts per page.\n  googleAnalyticsID: \"UA-111982167-1\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n    \"https://aceluby.github.io/resume/\",\n    \"https://stackoverflow.com/users/11500664/jake-luby\",\n    \"https://twitter.com/aceluby\",\n    \"mailto:jake.luby@gmail.com\"\n  ],\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"Tag - Misc\",\n      url: \"/blog/tags/misc\",\n    },\n    {\n      label: \"Tag - Gatsby\",\n      url: \"/blog/tags/gatsby\",\n    },\n    {\n      label: \"Tag - ReactJs\",\n      url: \"/blog/tags/reactjs\",\n    },\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"What I Learned Today\" // Label used before the year\n    // year: \"2018\" // optional, set specific copyright year or range of years, defaults to current year\n    // url: \"https://www.gatsbyjs.org/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: true // Enables the GatsbyJS promotion information in footer.\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { prefix, tags } = this.props;\n    if (tags) {\n      return (\n        <span>\n          {prefix}\n          {tags.map((tag, index, arr) => (\n            <span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>\n          ))}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorLink.css\";\n\nclass AuthorLink extends React.Component {\n  render() {\n    const { name, url } = this.props;\n    if (name && url) {\n      return <Link to={url}>{name}</Link>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLink;\n","import React from \"react\";\nimport \"./PostFormatting.css\";\n\nclass PostFormatting extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    return <article className={className}>{children}</article>;\n  }\n}\n\nexport default PostFormatting;\n","import React from \"react\";\nimport \"./PostHeader.css\";\n\nclass PostHeader extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <header className=\"post-header\">{children}</header>;\n  }\n}\n\nexport default PostHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostDate.css\";\n\nclass PostDate extends React.Component {\n  render() {\n    const { date } = this.props;\n    return (\n      <time\n        className=\"post-date\"\n        dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}\n      >\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>\n    );\n  }\n}\n\nexport default PostDate;\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"prismjs/themes/prism.css\";\nimport config from \"../../data/SiteConfig\";\nimport \"./layout.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const {\n      location: { pathname }\n    } = this.props;\n    const currentPath = pathname.replace(pathPrefix, \"\").replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.includes(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.includes(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const { postEdges, postAuthors } = this.props;\n    const postList = getPostList(postEdges, postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {`${excerpt} `}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <PostDate date={date} />\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n"],"sourceRoot":""}