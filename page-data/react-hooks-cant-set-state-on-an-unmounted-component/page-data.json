{"componentChunkName":"component---src-templates-post-jsx","path":"/react-hooks-cant-set-state-on-an-unmounted-component","webpackCompilationHash":"7f77a48defb03b7f025b","result":{"data":{"markdownRemark":{"html":"<h2 id=\"the-problem\"><a href=\"#the-problem\" aria-label=\"the problem permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Problem</h2>\n<p>How many times have you seen this?  Dozens?  Hundreds?  Thousands?  In my opinion\nthis is something that should be handled by the framework for how common one sees this,\nbut since that isn't possible the only way to handle this problem is to deal with it\nin your application code.  The most common reason we see this is because of long\ncomputations where the state is set at the end, or REST calls that are waiting for\na response.\n<br/>\n<br/>\nIf you're using components the solve is pretty easy.  All you need to do is have\na local component variable (not a state variable) that is set to true when constructed\nand set it to false on unmount.  Something like...</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Example</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> mounted <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span>\n    \n    <span class=\"token function\">componentWillUnmount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mounted <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">randomFunction</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">bar</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>mounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>foo<span class=\"token punctuation\">:</span> bar<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">//render code</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>The above will protect your setState from being called if the component is no\nlonger mounted.  You'll see code like this littered all over class components.  With\nhooks, however we have some options.</p>\n<h2 id=\"state-of-the-state\"><a href=\"#state-of-the-state\" aria-label=\"state of the state permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>State of the State</h2>\n<p>With functional components you need to think about things a bit differently.  Functional\ncomponents only care about <em>this</em> render, so if there are multiple renders we need to\nblock we need to have something that can go across renders.  Obviously we don't want\nto use <code class=\"language-text\">etState</code> since that is what we're trying to avoid, so we pull out the <code class=\"language-text\">useRef</code>\nwhich can hold values across renders, but doesn't force a rerender like <code class=\"language-text\">setState</code>.\nSounds perfect.  This is what that looks like</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isMounted <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> setFoo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        isMounted<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">randomFunction</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">bar</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMounted<span class=\"token punctuation\">.</span>current<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setFoo</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token comment\">//render code</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Using hooks we can extract this out of the component for reusability across our\nproject.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useIsMounted</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> isMounted <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      isMounted<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> isMounted<span class=\"token punctuation\">.</span>current\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isMounted <span class=\"token operator\">=</span> <span class=\"token function\">useIsMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> setFoo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">randomFunction</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">bar</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMounted<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setFoo</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token comment\">//render code</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"functional-wrapper---ifmounted\"><a href=\"#functional-wrapper---ifmounted\" aria-label=\"functional wrapper   ifmounted permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Functional Wrapper - ifMounted</h2>\n<p>Sweet!  Looks like a great solve, but we still have a problem where we have to\nwrap almost every <code class=\"language-text\">setState</code> in an if statement if we want to really protect\nourselves going forward, littering our otherwise clean code.\nWhat if we could reduce this to a single function call that checks whether the\ncomponent is mounted before calling 'setState'</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useIfMounted</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isMounted <span class=\"token operator\">=</span> <span class=\"token function\">useRef</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        isMounted<span class=\"token punctuation\">.</span>current <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">const</span> ifMounted <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n      <span class=\"token parameter\">func</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>isMounted<span class=\"token punctuation\">.</span>current <span class=\"token operator\">&amp;&amp;</span> func<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token function\">func</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> \n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n  \n    <span class=\"token keyword\">return</span> ifMounted\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Example</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> ifMounted <span class=\"token operator\">=</span> <span class=\"token function\">useIfMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>foo<span class=\"token punctuation\">,</span> setFoo<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">randomFunction</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">bar</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">ifMounted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">setFoo</span><span class=\"token punctuation\">(</span>bar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token comment\">//render code</span>\n    \n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now I can safely wrap any <code class=\"language-text\">setState</code> call in a single line with the ifMounted\nhook and never have to worry about setting state on an unmounted component\never again.</p>\n<h2 id=\"done\"><a href=\"#done\" aria-label=\"done permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Done!</h2>\n<p>That's it!  Have a better solution or have feedback?  Leave a comment below!</p>","timeToRead":2,"excerpt":"The Problem How many times have you seen this?  Dozens?  Hundreds?  Thousands?  In my opinion\nthis is something that should be handled by…","frontmatter":{"title":"React Hooks - Can't Set State On An Unmounted Component","cover":"/blog/images/blog-cover.jpg","date":"2019-09-17","category":"tech","tags":["reactjs","javascript"],"author":"jake"},"fields":{"slug":"/react-hooks-cant-set-state-on-an-unmounted-component"}},"prev":{"excerpt":"How to Create a GitHub Pages Blog Who am I? My name is Jake, and I've been in the software development space for…","frontmatter":{"title":"Introduction","cover":"/blog/images/hidden-beach-between-mountains-in-north-norway-picjumbo-com.jpg","date":"2019-07-21"},"fields":{"slug":"/introduction"}},"next":{"excerpt":"The Problem Today I ran into an issue where I had a couple of buttons on screen to move the date\nup or down a…","frontmatter":{"title":"Cancel In-Flight Axios Calls in Hooks","cover":"/blog/images/blog-cover.jpg","date":"2019-08-09"},"fields":{"slug":"/cancel-in-flight-axios-calls-in-hooks"}},"authors":{"edges":[{"node":{"uid":"casper","name":"Casper User","image":"https://api.adorable.io/avatars/150/test.png","url":"http://gatsbyjs.org/","bio":"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people."}},{"node":{"uid":"jake","name":"Jake Luby","image":"https://media.licdn.com/dms/image/C4E03AQEEKBDkpdoKwA/profile-displayphoto-shrink_200_200/0?e=1570665600&v=beta&t=-V7Zd2V2UbiNzivNozRsLP0fHHBVdwgQpOkKJODTDqk","url":"https://aceluby.github.io/resume/","bio":"Technology leader with 15 years of SLDC experience."}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-hooks-cant-set-state-on-an-unmounted-component","total":3,"prev":"/introduction","next":"/cancel-in-flight-axios-calls-in-hooks"}}}