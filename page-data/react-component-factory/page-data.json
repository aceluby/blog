{"componentChunkName":"component---src-templates-post-jsx","path":"/react-component-factory","webpackCompilationHash":"7f77a48defb03b7f025b","result":{"data":{"markdownRemark":{"html":"<h2 id=\"the-problem\"><a href=\"#the-problem\" aria-label=\"the problem permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Problem</h2>\n<p>For most of my projects I use a component library, with most of my projects are\nbuilt on top of Material UI.  It's a great library that handles the things that\nI don't want - or need - to solve so I can focus on functionality in my app.  It's\nwell documented and if I have an idea on how I want something to work, Material UI\nusually has a decent looking solution.</p>\n<p>Ok... enough praise of this library, one thing that absolutely drives me crazy\nabout this library and every other component library I've used is how much\nboilerplate code is needed for the simplest of components.</p>\n<p>Let's take a simple username input</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Form</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setUsername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleUsernameChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setUsername</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>TextField\n            onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleUsernameChange<span class=\"token punctuation\">}</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>That's just to have a simple input take in some data.  If you have a form with\n40 inputs, you can see how quickly this can get out of hand (yes, I know there\nare form tools and other tricks for this, bear with me here).</p>\n<h2 id=\"factory-pattern\"><a href=\"#factory-pattern\" aria-label=\"factory pattern permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Factory Pattern</h2>\n<p>A pattern that is used in other languages frequently is the factory pattern.  Typically,\nthis pattern is used in OO programming where a class creates objects without specifying\nexactly the exact class that will come out at the end.  Think a toy factory that\nproduces multiple types of toys, so when you ask for a kind of toy it gives you one\nthat fits what you're asking for without specifying it exactly beforehand.</p>\n<h2 id=\"why-do-i-care-about-this\"><a href=\"#why-do-i-care-about-this\" aria-label=\"why do i care about this permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why do I care about this?</h2>\n<p>When hooks came out this year and I started converting my classes to hooks, I started\nnoticing that my state was constantly getting lifted out of the components\nand into the custom hooks I was creating.  I was also copy/pasting inputs, dropdowns,\npickers, etc... all over the place.</p>\n<p>There had to be a way to get my input component logic <em>out</em> of my forms.</p>\n<h2 id=\"components-are-functions\"><a href=\"#components-are-functions\" aria-label=\"components are functions permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Components Are Functions</h2>\n<p>A component is just a function, a function can be returned from another function,\nand react hooks can return an array of pretty much anything - why not have a\nhook that encapsulates my component state logic and just exposes the component,\ngetter, and setter.</p>\n<h2 id=\"the-hook\"><a href=\"#the-hook\" aria-label=\"the hook permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>The Hook</h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">useTextFieldComponent</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">initialInput</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> theme <span class=\"token operator\">=</span> <span class=\"token function\">useTheme</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>field<span class=\"token punctuation\">,</span> setField<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span>initialInput <span class=\"token operator\">?</span> initialInput <span class=\"token punctuation\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleTextChange</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">setField</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> CustomTextField <span class=\"token operator\">=</span> <span class=\"token function\">useCallback</span><span class=\"token punctuation\">(</span>\n    <span class=\"token parameter\">props</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>TextField\n          onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleTextChange<span class=\"token punctuation\">}</span>\n          <span class=\"token punctuation\">{</span><span class=\"token operator\">...</span>props<span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>theme<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>CustomTextField<span class=\"token punctuation\">,</span> field<span class=\"token punctuation\">,</span> setField<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Form</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Username<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> setUsername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token comment\">//in here I can use username or setUsername to get/set the internal state</span>\n    <span class=\"token comment\">//of the component without needing all of the internals</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>Username <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"but-why\"><a href=\"#but-why\" aria-label=\"but why permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>But.... why?</h2>\n<p>Ok, ok... why is this pattern useful?  If you have a single text field this pattern\nprobably isn't going to be best for use, but what if you have an application with 100\nor 1,000 different inputs across dozens or hundreds of forms and components?  With\nthis pattern you can:</p>\n<ul>\n<li>Easily have common styling for these components since they are generated from the same source</li>\n<li>Have one place that tracks every input's internal state, when needed</li>\n<li>onChange can be overridden for any component if the form needs it</li>\n<li>Can override any of the components properties and stylings if needed</li>\n<li>Pseudo two-way binding, since you have direct access to the child internal functions returned from the hook</li>\n<li>Breaking changes in the underlying component library only impacts a single hook</li>\n</ul>\n<h2 id=\"simple-form\"><a href=\"#simple-form\" aria-label=\"simple form permalink\" class=\"anchor\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simple Form</h2>\n<p>Below is an example of a form with multiple inputs.  The only thing you now\nhave to worry about is the layout and when to submit the values.  The form doesn't\nneed to track the state of the child components and adding a new field is a simple\nas adding the hook and then placing the component where you see fit.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Form</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Username<span class=\"token punctuation\">,</span> username<span class=\"token punctuation\">,</span> setUsername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Password<span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">,</span> setPassword<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Name<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> setName<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Street<span class=\"token punctuation\">,</span> street<span class=\"token punctuation\">,</span> setStreet<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>State<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> setState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>Zip<span class=\"token punctuation\">,</span> zip<span class=\"token punctuation\">,</span> setZip<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useTextFieldComponent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    \n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Username <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Password <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Name <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Street <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>State <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Zip <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","timeToRead":3,"excerpt":"The Problem For most of my projects I use a component library, with most of my projects are \nbuilt on top of Material UI.  It's a great…","frontmatter":{"title":"React Component Factory","cover":"/blog/images/blog-cover.jpg","date":"2019-09-17","category":"tech","tags":["reactjs","javascript"],"author":"jake"},"fields":{"slug":"/react-component-factory"}},"prev":{"excerpt":"The Problem How many times have you seen this?  Dozens?  Hundreds?  Thousands?  In my opinion\nthis is something…","frontmatter":{"title":"React Hooks - Can't Set State On An Unmounted Component","cover":"/blog/images/blog-cover.jpg","date":"2019-09-17"},"fields":{"slug":"/react-hooks-cant-set-state-on-an-unmounted-component"}},"next":{"excerpt":"The Problem Today I ran into an issue where I had a couple of buttons on screen to move the date\nup or down a…","frontmatter":{"title":"Cancel In-Flight Axios Calls in Hooks","cover":"/blog/images/blog-cover.jpg","date":"2019-08-09"},"fields":{"slug":"/cancel-in-flight-axios-calls-in-hooks"}},"authors":{"edges":[{"node":{"uid":"jake","name":"Jake Luby","image":"https://media.licdn.com/dms/image/C4E03AQEEKBDkpdoKwA/profile-displayphoto-shrink_200_200/0?e=1570665600&v=beta&t=-V7Zd2V2UbiNzivNozRsLP0fHHBVdwgQpOkKJODTDqk","url":"https://aceluby.github.io/resume/","bio":"Technology leader with 15 years of SLDC experience."}},{"node":{"uid":"casper","name":"Casper User","image":"https://api.adorable.io/avatars/150/test.png","url":"http://gatsbyjs.org/","bio":"Yeah, I like animals better than people sometimes... Especially dogs. Dogs are the best. Every time you come home, they act like they haven't seen you in a year. And the good thing about dogs... is they got different dogs for different people."}}]}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/react-component-factory","total":4,"prev":"/react-hooks-cant-set-state-on-an-unmounted-component","next":"/cancel-in-flight-axios-calls-in-hooks"}}}