{"version":3,"sources":["webpack:///./src/components/AuthorProfile/AuthorProfile.jsx","webpack:///./src/components/AuthorName/AuthorName.jsx","webpack:///./src/components/AuthorBio/AuthorBio.jsx","webpack:///./src/components/AuthorStats/AuthorStats.jsx","webpack:///./src/templates/author.jsx","webpack:///./data/SiteConfig.js","webpack:///./src/components/PostTags/PostTags.jsx","webpack:///./src/components/AuthorLink/AuthorLink.jsx","webpack:///./src/components/PostFormatting/PostFormatting.jsx","webpack:///./src/components/PostHeader/PostHeader.jsx","webpack:///./src/components/PostDate/PostDate.jsx","webpack:///./src/models/author-model.js","webpack:///./src/components/layout.jsx","webpack:///./src/components/Drawer/Drawer.jsx","webpack:///./src/components/SiteWrapper/SiteWrapper.jsx","webpack:///./src/components/Footer/Footer.jsx","webpack:///./src/components/MainHeader/MainHeader.jsx","webpack:///./src/components/MainNav/MainNav.jsx","webpack:///./src/components/BlogLogo/BlogLogo.jsx","webpack:///./src/components/MenuButton/MenuButton.jsx","webpack:///./src/components/Navigation/GetNavList.jsx","webpack:///./src/components/SubscribeButton/SubscribeButton.jsx","webpack:///./src/components/Navigation/Navigation.jsx","webpack:///./src/components/AuthorThumbnail/AuthorThumbnail.jsx","webpack:///./src/components/PostListing/PostListing.jsx","webpack:///./src/components/SocialMediaIcons/SocialMediaIcons.jsx","webpack:///./src/components/AuthorImage/AuthorImage.jsx","webpack:///./src/components/AuthorMeta/AuthorMeta.jsx","webpack:///./src/components/AuthorLocation/AuthorLocation.jsx","webpack:///./src/components/AuthorWebsite/AuthorWebsite.jsx"],"names":["AuthorProfile","render","_this$props","this","props","children","className","classes","classNames","react_default","a","createElement","React","Component","AuthorName","name","AuthorBio","bio","AuthorStats","postEdges","length","AuthorTemplate","state","menuOpen","handleOnClick","evt","_this","stopPropagation","closeMenu","openMenu","handleOnClose","setState","location","_this$props$data","data","allMarkdownRemark","allAuthorsJson","_this$props$pageConte","pageContext","author","cover","edges","authorsEdges","getAuthor","node","layout","Drawer","isOpen","Helmet_default","title","config","siteTitle","Navigation","onClose","SiteWrapper","MainHeader","siteCover","MainNav","BlogLogo","logo","siteLogo","MenuButton","navigation","siteNavigation","onClick","components_AuthorProfile_AuthorProfile","AuthorImage","components_AuthorName_AuthorName","components_AuthorBio_AuthorBio","AuthorMeta","AuthorLocation","AuthorWebsite","url","components_AuthorStats_AuthorStats","PostListing","postAuthors","SocialMediaIcons","urls","socialUrls","Footer","copyright","promoteGatsby","pageQuery","module","exports","blogPostDir","blogAuthorDir","blogAuthorId","siteTitleAlt","siteUrl","pathPrefix","siteDescription","siteRss","siteRssAuthor","sitePaginationLimit","googleAnalyticsID","disqusShortname","siteSocialUrls","postDefaultCategoryID","userLinks","label","themeColor","backgroundColor","PostTags","prefix","tags","react__WEBPACK_IMPORTED_MODULE_1___default","map","tag","index","arr","key","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","_","kebabCase","AuthorLink","react__WEBPACK_IMPORTED_MODULE_2___default","PostFormatting","PostHeader","PostDate","date","dateTime","moment","Date","format","findName","uid","authorEdgesToList","authorEdges","edge","AuthorModel","hasAuthor","authorUid","authorList","Boolean","find","fallbackId","MainLayout","getLocalTitle","capitalize","string","charAt","toUpperCase","slice","currentPath","pathname","replace","includes","react__WEBPACK_IMPORTED_MODULE_4___default","react_helmet__WEBPACK_IMPORTED_MODULE_5___default","content","_this$props$copyright","year","getFullYear","href","show","no-cover","style","backgroundImage","gatsby__WEBPACK_IMPORTED_MODULE_2__","src","alt","GetNavList","NavList","primaryText","component","Link","divider","forEach","link","push","SubscribeButton","Divider","Subheader","ListItem","remainingProps","objectWithoutPropertiesLoose_default","role","mapToListParts","item","isValidElement","subheader","nestedItems","Object","assign","navItems","components_SubscribeButton_SubscribeButton","AuthorThumbnail","avatar","data-pin-nopin","postList","postEdge","path","fields","slug","frontmatter","SiteConfig","excerpt","timeToRead","getPostList","post","post_class","gatsby_browser_entry","components_AuthorThumbnail_AuthorThumbnail","image","color","react_social_icons__WEBPACK_IMPORTED_MODULE_2__","height","width","_this$props$author"],"mappings":"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","file":"component---src-templates-author-jsx-99ceb66d054ca60cc3a7.js","sourcesContent":["import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorProfile.css\";\n\nclass AuthorProfile extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-profile\", className);\n\n    return <section className={classes}>{children}</section>;\n  }\n}\n\nexport default AuthorProfile;\n","import React from \"react\";\nimport \"./AuthorName.css\";\n\nclass AuthorName extends React.Component {\n  render() {\n    const { name } = this.props;\n    if (name) {\n      return <h1 className=\"author-title\">{name}</h1>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorName;\n","import React from \"react\";\nimport \"./AuthorBio.css\";\n\nclass AuthorBio extends React.Component {\n  render() {\n    const { bio } = this.props;\n    if (bio) {\n      return <h2 className=\"author-bio\">{bio}</h2>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorBio;\n","import React from \"react\";\n\nclass AuthorStats extends React.Component {\n  render() {\n    const { postEdges } = this.props;\n    const getPostText = () => {\n      if (postEdges) {\n        return postEdges.length > 1\n          ? `${postEdges.length} posts`\n          : `${postEdges.length} post`;\n      }\n      return \"No posts\";\n    };\n    return (\n      <span className=\"author-stats\">\n        <i className=\"icon-stats\" />\n        {getPostText()}\n      </span>\n    );\n  }\n}\n\nexport default AuthorStats;\n","import { graphql } from \"gatsby\";\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport PostListing from \"../components/PostListing/PostListing\";\nimport config from \"../../data/SiteConfig\";\nimport Drawer from \"../components/Drawer/Drawer\";\nimport Navigation from \"../components/Navigation/Navigation\";\nimport SiteWrapper from \"../components/SiteWrapper/SiteWrapper\";\nimport MainHeader from \"../components/MainHeader/MainHeader\";\nimport MainNav from \"../components/MainNav/MainNav\";\nimport BlogLogo from \"../components/BlogLogo/BlogLogo\";\nimport MenuButton from \"../components/MenuButton/MenuButton\";\nimport AuthorImage from \"../components/AuthorImage/AuthorImage\";\nimport AuthorProfile from \"../components/AuthorProfile/AuthorProfile\";\nimport AuthorName from \"../components/AuthorName/AuthorName\";\nimport AuthorBio from \"../components/AuthorBio/AuthorBio\";\nimport AuthorMeta from \"../components/AuthorMeta/AuthorMeta\";\nimport AuthorLocation from \"../components/AuthorLocation/AuthorLocation\";\nimport AuthorWebsite from \"../components/AuthorWebsite/AuthorWebsite\";\nimport AuthorStats from \"../components/AuthorStats/AuthorStats\";\nimport Footer from \"../components/Footer/Footer\";\nimport SocialMediaIcons from \"../components/SocialMediaIcons/SocialMediaIcons\";\nimport Layout from \"../components/layout\";\n\nclass AuthorTemplate extends React.Component {\n  state = {\n    menuOpen: false\n  };\n\n  handleOnClick = evt => {\n    const { menuOpen } = this.state;\n    evt.stopPropagation();\n    if (menuOpen) {\n      this.closeMenu();\n    } else {\n      this.openMenu();\n    }\n  };\n\n  handleOnClose = evt => {\n    evt.stopPropagation();\n    this.closeMenu();\n  };\n\n  openMenu = () => {\n    this.setState({ menuOpen: true });\n  };\n\n  closeMenu = () => {\n    this.setState({ menuOpen: false });\n  };\n\n  render() {\n    const {\n      location,\n      data: { allMarkdownRemark, allAuthorsJson },\n      pageContext: { author, cover }\n    } = this.props;\n    const { menuOpen } = this.state;\n\n    const postEdges =\n      allMarkdownRemark && allMarkdownRemark.edges\n        ? allMarkdownRemark.edges\n        : [];\n    const authorsEdges =\n      allAuthorsJson && allAuthorsJson.edges ? allAuthorsJson.edges : [];\n    const getAuthor = () => authorsEdges[0].node;\n\n    return (\n      <Layout location={location}>\n        <Drawer className=\"author-template\" isOpen={menuOpen}>\n          <Helmet title={`Posts by \"${author}\" | ${config.siteTitle}`} />\n\n          {/* The blog navigation links */}\n          <Navigation config={config} onClose={this.handleOnClose} />\n\n          <SiteWrapper>\n            <MainHeader className=\"author-head\" cover={config.siteCover}>\n              <MainNav>\n                <BlogLogo logo={config.siteLogo} title={config.siteTitle} />\n                <MenuButton\n                  navigation={config.siteNavigation}\n                  onClick={this.handleOnClick}\n                />\n              </MainNav>\n            </MainHeader>\n\n            <AuthorProfile className=\"inner\">\n              <AuthorImage author={getAuthor()} />\n              <AuthorName name={getAuthor().name} />\n              <AuthorBio bio={getAuthor().bio} />\n              <AuthorMeta>\n                <AuthorLocation location={getAuthor().location} />\n                <AuthorWebsite url={getAuthor().url} />\n              </AuthorMeta>\n              <AuthorStats postEdges={postEdges} />\n            </AuthorProfile>\n\n            {/* PostListing component renders all the posts */}\n            <PostListing postEdges={postEdges} postAuthors={authorsEdges} />\n\n            {/* Social information here */}\n            <SocialMediaIcons urls={getAuthor().socialUrls} />\n\n            {/* The tiny footer at the very bottom */}\n            <Footer\n              copyright={config.copyright}\n              promoteGatsby={config.promoteGatsby}\n            />\n          </SiteWrapper>\n        </Drawer>\n      </Layout>\n    );\n  }\n}\n\n/* eslint no-undef: \"off\" */\nexport const pageQuery = graphql`\n  query AuthorPage($author: String) {\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { author: { eq: $author } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          excerpt\n          timeToRead\n          frontmatter {\n            title\n            tags\n            cover\n            date\n            author\n          }\n        }\n      }\n    }\n    allAuthorsJson(filter: { uid: { eq: $author } }) {\n      edges {\n        node {\n          uid\n          name\n          image\n          url\n          bio\n          location\n          socialUrls\n        }\n      }\n    }\n  }\n`;\n\nexport default AuthorTemplate;\n","module.exports = {\n  blogPostDir: \"posts\", // The name of directory that contains your posts.\n  blogAuthorDir: \"authors\", // The name of directory that contains your 'authors' folder.\n  blogAuthorId: \"jake\", // The default and fallback author ID used for blog posts without a defined author.\n  siteTitle: \"What I Learned Today\", // Site title.\n  siteTitleAlt: \"A Daily Engineering Blog\", // Alternative site title for SEO.\n  siteLogo:\n    \"/blog/logos/logo-1024.png\", // Logo used for SEO and manifest. e.g. \"/logos/logo-1024.png\",\n  siteUrl: \"https://aceluby.github.io/\", // Domain of your website without pathPrefix.\n  pathPrefix: \"/blog\", // Prefixes all links. For cases when deployed to example.github.io/gatsby-starter-casper/.\n  siteDescription:\n    \"A technology blog for software engineers\", // Website description used for RSS feeds/meta description tag.\n  siteCover:\n    \"/blog/images/blog-cover.jpg\", // Optional, the cover image used in header for home page. e.g: \"/images/blog-cover.jpg\",\n  cover:\n      \"/blog/images/blog-cover.jpg\",\n  siteNavigation: true, // If navigation is enabled the Menu button will be visible\n  siteRss: \"/rss.xml\", // Path to the RSS file.\n  siteRssAuthor: \"What I Learned Today\", // The author name used in the RSS file\n  // siteFBAppID: \"1825356251115265\", // optional, sets the FB Application ID for using app insights\n  sitePaginationLimit: 10, // The max number of posts per page.\n  googleAnalyticsID: \"UA-111982167-1\", // GA tracking ID.\n  disqusShortname: \"https-vagr9k-github-io-gatsby-advanced-starter\", // enables Disqus comments, visually deviates from original Casper theme.\n  siteSocialUrls: [\n    \"https://aceluby.github.io/resume/\",\n    \"https://stackoverflow.com/users/11500664/jake-luby\",\n    \"https://twitter.com/aceluby\",\n    \"mailto:jake.luby@gmail.com\"\n  ],\n  postDefaultCategoryID: \"Tech\", // Default category for posts.\n  // Links to social profiles/projects you want to display in the navigation bar.\n  userLinks: [\n    {\n      label: \"Tag - Misc\",\n      url: \"/blog/tags/misc\",\n    },\n    {\n      label: \"Tag - Gatsby\",\n      url: \"/blog/tags/gatsby\",\n    },\n    {\n      label: \"Tag - ReactJs\",\n      url: \"/blog/tags/reactjs\",\n    },\n  ],\n  // Copyright string for the footer of the website and RSS feed.\n  copyright: {\n    label: \"What I Learned Today\" // Label used before the year\n    // year: \"2018\" // optional, set specific copyright year or range of years, defaults to current year\n    // url: \"https://www.gatsbyjs.org/\" // optional, set link address of copyright, defaults to site root\n  },\n  themeColor: \"#c62828\", // Used for setting manifest and progress theme colors.\n  backgroundColor: \"#e0e0e0\", // Used for setting manifest background color.\n  promoteGatsby: true // Enables the GatsbyJS promotion information in footer.\n};\n","import React, { Component } from \"react\";\nimport _ from \"lodash\";\nimport { Link } from \"gatsby\";\nimport \"./PostTags.css\";\n\nclass PostTags extends Component {\n  render() {\n    const { prefix, tags } = this.props;\n    if (tags) {\n      return (\n        <span>\n          {prefix}\n          {tags.map((tag, index, arr) => (\n            <span key={tag}>\n              <Link key={tag} to={`/tags/${_.kebabCase(tag)}`}>\n                {tag}\n              </Link>\n              {index !== arr.length - 1 ? \", \" : \"\"}\n            </span>\n          ))}\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default PostTags;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./AuthorLink.css\";\n\nclass AuthorLink extends React.Component {\n  render() {\n    const { name, url } = this.props;\n    if (name && url) {\n      return <Link to={url}>{name}</Link>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLink;\n","import React from \"react\";\nimport \"./PostFormatting.css\";\n\nclass PostFormatting extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    return <article className={className}>{children}</article>;\n  }\n}\n\nexport default PostFormatting;\n","import React from \"react\";\nimport \"./PostHeader.css\";\n\nclass PostHeader extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <header className=\"post-header\">{children}</header>;\n  }\n}\n\nexport default PostHeader;\n","import React from \"react\";\nimport moment from \"moment\";\nimport \"./PostDate.css\";\n\nclass PostDate extends React.Component {\n  render() {\n    const { date } = this.props;\n    return (\n      <time\n        className=\"post-date\"\n        dateTime={moment(new Date(date)).format(\"YYYY-MM-DD\")}\n      >\n        {moment(new Date(date)).format(\"DD MMMM YYYY\")}\n      </time>\n    );\n  }\n}\n\nexport default PostDate;\n","const findName = name => author => author.uid === name;\nconst authorEdgesToList = authorEdges => authorEdges.map(edge => edge.node);\n\nclass AuthorModel {\n  static hasAuthor(authorEdges, authorUid) {\n    const authorList = authorEdgesToList(authorEdges);\n    return Boolean(authorList.find(findName(authorUid)));\n  }\n\n  static getAuthor(authorEdges, authorUid, fallbackId) {\n    const authorList = authorEdgesToList(authorEdges);\n    if (this.hasAuthor(authorEdges, authorUid)) {\n      return authorList.find(findName(authorUid));\n    }\n    return authorList.find(findName(fallbackId));\n  }\n}\n\nexport default AuthorModel;\n","/* eslint-disable import/no-extraneous-dependencies */\nimport React from \"react\";\nimport Helmet from \"react-helmet\";\nimport \"prismjs/themes/prism.css\";\nimport config from \"../../data/SiteConfig\";\nimport \"./layout.css\";\n\nexport default class MainLayout extends React.Component {\n  getLocalTitle() {\n    function capitalize(string) {\n      return string.charAt(0).toUpperCase() + string.slice(1);\n    }\n    const pathPrefix = config.pathPrefix ? config.pathPrefix : \"/\";\n    const {\n      location: { pathname }\n    } = this.props;\n    const currentPath = pathname.replace(pathPrefix, \"\").replace(\"/\", \"\");\n    let title = \"\";\n    if (currentPath === \"\") {\n      title = \"Home\";\n    } else if (currentPath === \"tags/\") {\n      title = \"Tags\";\n    } else if (currentPath === \"categories/\") {\n      title = \"Categories\";\n    } else if (currentPath === \"about/\") {\n      title = \"About\";\n    } else if (currentPath.includes(\"posts\")) {\n      title = \"Article\";\n    } else if (currentPath.includes(\"tags/\")) {\n      const tag = currentPath\n        .replace(\"tags/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `Tagged in ${capitalize(tag)}`;\n    } else if (currentPath.includes(\"categories/\")) {\n      const category = currentPath\n        .replace(\"categories/\", \"\")\n        .replace(\"/\", \"\")\n        .replace(\"-\", \" \");\n      title = `${capitalize(category)}`;\n    }\n    return title;\n  }\n\n  render() {\n    const { children } = this.props;\n    return (\n      <div>\n        <Helmet>\n          <title>{`${config.siteTitle} |  ${this.getLocalTitle()}`}</title>\n          <meta name=\"description\" content={config.siteDescription} />\n        </Helmet>\n        {children}\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./Drawer.css\";\n\nclass Drawer extends React.Component {\n  render() {\n    const { children, isOpen, className } = this.props;\n\n    const getClassName = isOpened => (isOpened ? \"nav-opened\" : \"nav-closed\");\n    const classes = classNames(className, getClassName(isOpen));\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default Drawer;\n","import React from \"react\";\nimport \"./SiteWrapper.css\";\n\nclass SiteWrapper extends React.Component {\n  render() {\n    const { children } = this.props;\n    return <div className=\"site-wrapper\">{children}</div>;\n  }\n}\n\nexport default SiteWrapper;\n","import React, { Component } from \"react\";\nimport \"./Footer.css\";\n\nclass Footer extends Component {\n  render() {\n    const PoweredBy = props => {\n      const { show } = props;\n      if (show) {\n        return (\n          <section className=\"poweredby\">\n            {\"Proudly published with \"}\n            <a href=\"https://gatsbyjs.org\">Gatsby</a>\n          </section>\n        );\n      }\n      return null;\n    };\n\n    const {\n      promoteGatsby,\n      copyright: { label, url, year }\n    } = this.props;\n    const date = year || new Date().getFullYear();\n    return (\n      <footer className=\"site-footer clearfix\">\n        <section className=\"copyright\">\n          <a href={url || \"/\"}>{`${label}`}</a>\n          {` `}\n          &copy;\n          {`${date}`}\n        </section>\n        <PoweredBy show={promoteGatsby} />\n      </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainHeader.css\";\n\nclass MainHeader extends React.Component {\n  render() {\n    const { children, cover, className } = this.props;\n    const classes = classNames(\"main-header\", className, {\n      \"no-cover\": !cover\n    });\n    const getStyle = () => {\n      if (cover) {\n        return { backgroundImage: `url(\"${cover}\")` };\n      }\n      return null;\n    };\n\n    return (\n      <header className={classes} style={getStyle()}>\n        {children}\n      </header>\n    );\n  }\n}\n\nexport default MainHeader;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./MainNav.css\";\n\nclass MainNav extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const formatting = [\"overlay\", \"clearfix\"];\n    const classes = classNames(\"main-nav\", formatting, className);\n\n    return <nav className={classes}>{children}</nav>;\n  }\n}\n\nexport default MainNav;\n","import React, { Component } from \"react\";\nimport { Link } from \"gatsby\";\nimport \"./BlogLogo.css\";\n\nclass BlogLogo extends Component {\n  render() {\n    const { logo, url, title } = this.props;\n    if (logo) {\n      return (\n        <Link className=\"blog-logo\" to={url || \"/\"}>\n          {/* style={{ boxShadow: \"none\" }}> */}\n          <img src={logo} alt={title} />\n        </Link>\n      );\n    }\n    return null;\n  }\n}\n\nexport default BlogLogo;\n","import React, { Component } from \"react\";\nimport \"./MenuButton.css\";\n\nclass MenuButton extends Component {\n  render() {\n    const { navigation, onClick } = this.props;\n    if (navigation && onClick) {\n      return (\n        <a className=\"menu-button icon-menu\" href=\"#menu\" onClick={onClick}>\n          <span className=\"word\">Menu</span>\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default MenuButton;\n","// import FontIcon from \"react-md/lib/FontIcons\";\nimport { Link } from \"gatsby\";\n\nfunction GetNavList(config) {\n  const NavList = [\n    {\n      primaryText: \"Home\",\n      // LeftIcon: <p>home</p>,\n      component: Link,\n      to: \"/\"\n    },\n    {\n      divider: true\n    }\n  ];\n\n  if (config.userLinks) {\n    config.userLinks.forEach(link => {\n      NavList.push({\n        primaryText: link.label,\n        // LeftIcon: <FontIcon forceSize iconClassName={link.iconClassName} />,\n        component: \"a\",\n        href: link.url\n      });\n    });\n  }\n\n  NavList.push({ divider: true });\n\n  NavList.push({\n    primaryText: \"About\",\n    // LeftIcon: <FontIcon>person</FontIcon>,\n    component: Link,\n    to: \"/author/jake\"\n  });\n  return NavList;\n}\nexport default GetNavList;\n","import React from \"react\";\nimport \"./SubscribeButton.css\";\n\nclass SubscribeButton extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <a className=\"subscribe-button icon-feed\" href={url}>\n          Subscribe\n        </a>\n      );\n    }\n    return null;\n  }\n}\n\nexport default SubscribeButton;\n","import React, { Component, createElement, isValidElement } from \"react\";\nimport GetNavList from \"./GetNavList\";\nimport \"./Navigation.css\";\nimport SubscribeButton from \"../SubscribeButton/SubscribeButton\";\n\nconst Divider = () => null;\n\nconst Subheader = props => {\n  const { primaryText } = props;\n  return <h3>{primaryText}</h3>;\n};\n\nconst ListItem = props => {\n  const { primaryText, component, ...remainingProps } = props;\n  return (\n    <li className=\"nav-opened\" role=\"presentation\">\n      {createElement(component, remainingProps, primaryText)}\n    </li>\n  );\n};\n\nconst mapToListParts = (item, index) => {\n  if (typeof item === \"string\" || typeof item === \"number\") {\n    return createElement(ListItem, { key: item, primaryText: item });\n  }\n  if (isValidElement(item)) {\n    return item;\n  }\n\n  const { divider, subheader, nestedItems, ...remainingProps } = item;\n  let component;\n  if (divider) {\n    component = Divider;\n  } else if (subheader) {\n    component = Subheader;\n  } else {\n    component = ListItem;\n  }\n\n  const props = { ...remainingProps, key: item.key || index };\n  if (nestedItems) {\n    props.nestedItems = nestedItems.map(mapToListParts);\n  }\n\n  return createElement(component, props);\n};\n\nclass Navigation extends Component {\n  render() {\n    const { config, onClose } = this.props;\n    const navItems = GetNavList(config);\n    return (\n      <div>\n        <div className=\"nav\">\n          <h3 className=\"nav-title\">Menu</h3>\n          <a href=\"#close\" className=\"nav-close\" onClick={onClose}>\n            <span className=\"hidden\">Close</span>\n          </a>\n          <ul>{navItems.map(mapToListParts)}</ul>\n          <SubscribeButton url={config.siteRss} />\n        </div>\n        <span className=\"nav-cover\" />\n      </div>\n    );\n  }\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport \"./AuthorThumbnail.css\";\n\nclass AuthorThumbnail extends React.Component {\n  render() {\n    const { avatar, name } = this.props;\n    if (avatar && name) {\n      return (\n        <img\n          className=\"author-thumb\"\n          src={avatar}\n          alt={name}\n          data-pin-nopin=\"true\"\n        />\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorThumbnail;\n","import React from \"react\";\nimport { Link } from \"gatsby\";\nimport AuthorThumbnail from \"../AuthorThumbnail/AuthorThumbnail\";\nimport PostTags from \"../PostTags/PostTags\";\nimport SiteConfig from \"../../../data/SiteConfig\";\nimport AuthorLink from \"../AuthorLink/AuthorLink\";\nimport PostFormatting from \"../PostFormatting/PostFormatting\";\nimport PostHeader from \"../PostHeader/PostHeader\";\nimport PostDate from \"../PostDate/PostDate\";\nimport AuthorModel from \"../../models/author-model\";\nimport \"./PostListing.css\";\n\nconst getPostList = (postEdges, authorEdges) =>\n  postEdges.map(postEdge => ({\n    path: postEdge.node.fields.slug,\n    tags: postEdge.node.frontmatter.tags,\n    cover: postEdge.node.frontmatter.cover,\n    title: postEdge.node.frontmatter.title,\n    date: postEdge.node.frontmatter.date,\n    author: AuthorModel.getAuthor(\n      authorEdges,\n      postEdge.node.frontmatter.author,\n      SiteConfig.blogAuthorId\n    ),\n    excerpt: postEdge.node.excerpt,\n    timeToRead: postEdge.node.timeToRead\n  }));\n\nclass PostListing extends React.Component {\n  render() {\n    const { postEdges, postAuthors } = this.props;\n    const postList = getPostList(postEdges, postAuthors);\n\n    return (\n      <div>\n        {/* This is the post loop - each post will be output using this markup */}\n        {postList.map(post => {\n          const { title, path, excerpt, author, tags, date } = post;\n          const className = post.post_class ? post.post_class : \"post\";\n\n          return (\n            <PostFormatting className={className} key={title}>\n              <PostHeader>\n                <h2 className=\"post-title\">\n                  <Link to={path}>{title}</Link>\n                </h2>\n              </PostHeader>\n              <section className=\"post-excerpt\">\n                {/* TODO limit excerpt to 26 words */}\n                <p>\n                  {`${excerpt} `}\n                  <Link className=\"read-more\" to={path}>\n                    &raquo;\n                  </Link>\n                </p>\n              </section>\n              <footer className=\"post-meta\">\n                <AuthorThumbnail avatar={author.image} name={author.name} />\n                <AuthorLink url={`/author/${author.uid}`} name={author.name} />\n                <PostTags prefix=\" on \" tags={tags} />\n                <PostDate date={date} />\n              </footer>\n            </PostFormatting>\n          );\n        })}\n      </div>\n    );\n  }\n}\n\nexport default PostListing;\n","import React from \"react\";\nimport { SocialIcon } from \"react-social-icons\";\nimport \"./SocialMediaIcons.css\";\n\nclass SocialMediaIcons extends React.Component {\n  render() {\n    const { urls, color } = this.props;\n    if (urls && urls.length > 0) {\n      return (\n        <div className=\"social-media-icons\">\n          {urls.map(url => (\n            <SocialIcon\n              key={url}\n              className=\"social-media-icon\"\n              url={url}\n              color={color}\n              style={{ height: null, width: null }}\n            />\n          ))}\n        </div>\n      );\n    }\n    return null;\n  }\n}\n\nexport default SocialMediaIcons;\n","import React from \"react\";\nimport \"./AuthorImage.css\";\n\nclass AuthorImage extends React.Component {\n  render() {\n    const {\n      author: { name, image, url }\n    } = this.props;\n    if (image) {\n      return (\n        <figure className=\"author-image\">\n          <a\n            className=\"img\"\n            href={url}\n            style={{ backgroundImage: `url(\"${image}\")` }}\n          >\n            <span className=\"hidden\">{`${name}'s Picture`}</span>\n          </a>\n        </figure>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorImage;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport \"./AuthorMeta.css\";\n\nclass AuthorMeta extends React.Component {\n  render() {\n    const { children, className } = this.props;\n    const classes = classNames(\"author-meta\", className);\n\n    return <div className={classes}>{children}</div>;\n  }\n}\n\nexport default AuthorMeta;\n","import React from \"react\";\n\nclass AuthorLocation extends React.Component {\n  render() {\n    const { location } = this.props;\n    if (location) {\n      return <span className=\"author-location icon-location\">{location}</span>;\n    }\n    return null;\n  }\n}\n\nexport default AuthorLocation;\n","import React from \"react\";\n\nclass AuthorWebsite extends React.Component {\n  render() {\n    const { url } = this.props;\n    if (url) {\n      return (\n        <span className=\"author-link icon-link\">\n          <a href={url}>{url}</a>\n        </span>\n      );\n    }\n    return null;\n  }\n}\n\nexport default AuthorWebsite;\n"],"sourceRoot":""}